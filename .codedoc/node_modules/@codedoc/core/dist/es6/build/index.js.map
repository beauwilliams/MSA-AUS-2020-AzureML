{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/build/index.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport { join } from 'path';\nimport { Configuration } from 'webpack';\nimport { files, pathMatch, readFile, mapExt, mapRoot, File } from 'rxline/fs';\nimport { post, save, Compiled } from '@connectv/sdh';\nimport { TransportedFunc } from '@connectv/sdh/dist/es6/dynamic/transport/index';\n\nimport { CodedocConfig } from '../config';\nimport { initJss } from '../transport/setup-jss';\nimport { bundle } from './bundle';\nimport { ContentBuilder } from './types';\nimport { content } from './content';\nimport { styles } from './styles';\nimport { loadToC } from './toc';\nimport { namespace } from './namespace';\n\n\nexport async function build(\n  config: CodedocConfig,\n  builder: ContentBuilder,\n  themeInstaller: TransportedFunc<void>,\n  webpackConfig?: Configuration,\n) {\n  initJss();\n\n  const _bundle = bundle(config, themeInstaller);\n  const _styles = styles(config);\n\n  const _toc = await loadToC(config);\n\n  return new Promise(resolve => {\n    files('.', { root: config.src.base })\n      .pick(pathMatch(config.src.pick))\n      .drop(pathMatch(config.src.drop))\n      .peek(file => console.log(`${chalk.gray('# building ........ ' + join(file.root, file.path)) }`))\n      .pipe(\n        readFile(),\n        content(builder, _toc, config, _styles),\n        mapExt(() => '.html'),\n        mapRoot(() => config.dest.html),\n        post(_bundle.collect()),\n        post(namespace(config)),\n        (file: File<Compiled>) => {\n          (config.page.post || []).forEach(p => file.content.post(html => p(html, file)));\n          return file;\n        },\n        save(),\n      )\n      .peek(file => console.log(`${chalk.green('#')}${chalk.gray(' built:: .........')} ${join(file.root, file.path)}`))\n      .process()\n      .collect(() => {\n        console.log(`${chalk.gray('# building ........ ' + _styles.path)}`);\n        console.log(`${chalk.gray('# building ........ ' + _bundle.path)}`);\n        Promise.all([\n          save(_bundle, webpackConfig)\n          .then(() => console.log(`${chalk.green('#')} ${chalk.gray('built:: .........')} ${_bundle.path}`)),\n          _styles.save()\n          .then(() => console.log(`${chalk.green('#')} ${chalk.gray('built:: .........')} ${_styles.path}`)),\n        ])\n        .then(resolve);\n      });\n  });\n}\n"]}