import { funcTransport, onReady } from '@connectv/sdh/transport';
import { polyfillCustomEvent } from './custom-event';
let lastpath = undefined;
function navigate(url, push = true) {
    const container = document.getElementById('-codedoc-container');
    if (container) {
        if (window.innerWidth <= 1200 && window.codedocToggleToC)
            window.codedocToggleToC(false);
        if (push && url === location.pathname)
            return;
        container.style.opacity = '0';
        if (push) {
            history.pushState(url, '', url);
            lastpath = location.pathname;
        }
        window.dispatchEvent(new CustomEvent('navigation-start', { detail: { url } }));
        fetch(url)
            .then(response => response.text())
            .then(html => {
            var _a;
            const parser = new DOMParser();
            const dom = parser.parseFromString(html, 'text/html');
            const title = document.head.querySelector('title');
            if (title)
                title.innerHTML = ((_a = dom.head.querySelector('title')) === null || _a === void 0 ? void 0 : _a.innerHTML) || title.innerHTML;
            setTimeout(() => {
                var _a;
                container.innerHTML = ((_a = dom.getElementById('-codedoc-container')) === null || _a === void 0 ? void 0 : _a.innerHTML) || '';
                container.querySelectorAll('script').forEach(s => eval(s.textContent || ''));
                setTimeout(() => container.style.opacity = '1', 10);
                window.dispatchEvent(new CustomEvent('navigation', { detail: { url } }));
            }, 150);
        });
    }
    else {
        window.location.href = url;
        lastpath = location.pathname;
    }
}
export function smoothLoading() {
    polyfillCustomEvent();
    onReady(() => {
        lastpath = location.pathname;
        if (!window.__smooth_loading_plugged) {
            window.__smooth_loading_plugged = true;
            document.addEventListener('click', event => {
                var _a;
                let target = event.target;
                while (target && !target.href) {
                    target = target.parentNode;
                }
                if (target && ((_a = target.getAttribute('href')) === null || _a === void 0 ? void 0 : _a.startsWith('/'))) {
                    const url = target.getAttribute('href') || '';
                    event.preventDefault();
                    navigate(url);
                    return;
                }
            });
            const isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
            window.addEventListener('popstate', event => {
                if (location.pathname === lastpath)
                    return;
                lastpath = location.pathname;
                if (isSafari)
                    window.location.href = event.state || '/';
                else
                    navigate(event.state || '/', false);
            });
        }
    });
}
export const smoothLoading$ = funcTransport(smoothLoading);
//# sourceMappingURL=smooth-loading.js.map