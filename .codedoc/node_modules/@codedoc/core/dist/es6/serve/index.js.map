{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/serve/index.ts"],"names":[],"mappings":"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","sourcesContent":["import express from 'express';\nimport chalk from 'chalk';\nimport { join } from 'path';\nimport { compile } from '@connectv/sdh';\nimport { Configuration } from 'webpack';\nconst merge = /*#__PURE__*/require('webpack-merge');\nimport { TransportedFunc } from '@connectv/sdh/dist/es6/dynamic/transport/index';\n\nimport { CodedocConfig } from '../config';\nimport { ContentBuilder } from '../build/types';\nimport { build } from '../build';\n\nimport { StatusCheckURL, StatusBuildingResponse, StatusReadyResponse } from './config';\nimport { buildingHtml } from './building-html';\nimport { reloadOnChange$ } from './reload';\n\n\nexport function serve(\n  root: string,\n  config: CodedocConfig,\n  builder: ContentBuilder,\n  themeInstaller: TransportedFunc<void>,\n  webpackConfig?: Configuration,\n) {\n  let built = false;\n  config = { ...config, bundle: { ...config.bundle, init: [...config.bundle.init, reloadOnChange$] } };\n  build(config, builder, themeInstaller, merge({ mode: 'development' }, webpackConfig || {})).then(() => {\n    built = true;\n    console.log(chalk.greenBright('# ') + 'Documents rebuilt!');\n  });\n\n  const app = express();\n  app.get(StatusCheckURL, (_, res) => {\n    if (!built) res.send(StatusBuildingResponse);\n    else res.send(StatusReadyResponse);\n  });\n\n  app.use(config.dest.namespace, express.static(config.dest.assets));\n\n  app.get(`${config.dest.namespace}/*`, (req, res) => {\n    const normalUrl = req.originalUrl.substr(config.dest.namespace.length);\n    const filename = (normalUrl === '/' ? 'index' : normalUrl) + '.html';\n    const filepath = join(root, config.dest.html, filename);\n    res.sendFile(filepath, {}, err => {\n      if (err) {\n        if (!built) {\n          compile(buildingHtml)\n          .serialize()\n          .then(html => res.status(200).send(html));\n        }\n        else {\n          console.log(chalk.red('# Not Found::'));\n          console.log(chalk.red('# ') + req.originalUrl);\n          console.log(chalk.red('# ') + chalk.gray(filepath));\n          console.log();\n          res.status(404).send('Not Found!');\n        }\n      }\n    });\n  });\n\n  app.listen(config.dev.port, () => {\n    console.log(chalk.greenBright('# ') + 'Serving docs on ' \n          +  chalk.cyan(`http://localhost:${config.dev.port}${config.dest.namespace}`))\n  });\n}\n"]}