"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var prismjs_1 = require("prismjs");
var loadLanguages = /*#__PURE__*/ require('prismjs/components/');
var style_1 = require("./style");
var parse_1 = require("./parse");
function Code(options, renderer, content) {
    var _a;
    renderer = renderer.plug(this.theme.styled(style_1.CodeStyle));
    var classes = this.theme.classes(style_1.CodeStyle);
    var extopts = { wmbar: undefined, filename: undefined };
    var lang = undefined;
    var extras;
    if (options.lang) {
        _a = options.lang.split('|').map(function (_) { return _.trim(); }), lang = _a[0], extras = _a.slice(1);
        if (!prismjs_1.languages[lang])
            loadLanguages([lang]);
        extras.forEach(function (ext) {
            if (ext === '--wmbar')
                extopts.wmbar = true;
            else if (ext == '--no-wmbar')
                extopts.wmbar = false;
            else {
                extopts.filename = ext;
                extopts.wmbar = true;
            }
        });
    }
    var code$ = renderer.create("code", { class: "" + lang, tabindex: "0" },
        renderer.create("span", { class: classes.wmbar },
            renderer.create("span", null),
            renderer.create("span", null),
            renderer.create("span", null),
            renderer.create("span", null, extopts.filename || '')));
    var _b = parse_1.parse(content[0]), code = _b[0], lines = _b[1], highlights = _b[2];
    var highlines = lang ? prismjs_1.highlight(code, prismjs_1.languages[lang], lang).split('\n') : code.split('\n');
    lines.forEach(function (line, index) {
        var highline = highlines[index];
        var counter = index + 1;
        var counter$;
        if (counter === 1 || counter === lines.length || counter % 5 === 0)
            counter$ = renderer.create("span", { class: classes.lineCounter + " prim" }, counter);
        else
            counter$ = renderer.create("span", { class: classes.lineCounter }, counter);
        var highlighted = highlights[index];
        var line$ = renderer.create("div", { class: classes.line + " " + (highlighted ? 'highlight' : ''), "data-content": line, _innerHTML: highline });
        if (line$.firstChild)
            renderer.render(counter$).before(line$.firstChild);
        else
            renderer.render(counter$).on(line$);
        renderer.render(line$).on(code$);
        renderer.render(renderer.create("br", null)).on(code$);
    });
    var wmbar = lines.length > 1 && (this.theme.theme.code.wmbar || extopts.wmbar) && extopts.wmbar !== false;
    return renderer.create("pre", { class: wmbar ? 'with-bar' : '' }, code$);
}
exports.Code = Code;
var style_2 = require("./style");
exports.CodeStyle = style_2.CodeStyle;
//# sourceMappingURL=index.js.map