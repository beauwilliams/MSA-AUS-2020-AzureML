export interface CodeTheme {
    background: string;
    text: string;
    shadow: string;
    lineHover: string;
    lineHightlight: string;
    lineHighlightText: string;
    lineCounter: string;
    lineCounterBorder: string;
    lineCounterBorderHover: string;
    lineCounterHighlight: string;
    keyword: string;
    boolean: string;
    number: string;
    string: string;
    function: string;
    parameter: string;
    tag: string;
    comment: string;
    operator: string;
    punctuation: string;
    builtin: string;
    className: string;
    attrName: string;
    attrValue: string;
    plainText: string;
    script: string;
}
export interface QuoteTheme {
    background: string;
    text: string;
    border: string;
}
export interface ToCTheme {
    background: string;
    border: string;
}
export interface ContentTheme {
    background: string;
    text: string;
    code: string;
    primary: string;
    primaryContrast: string;
    border: string;
}
export interface CodedocTheme {
    light: ContentTheme;
    dark: ContentTheme;
    code: {
        wmbar: boolean;
        light: CodeTheme;
        dark: CodeTheme;
    };
    quote: {
        light: QuoteTheme;
        dark: QuoteTheme;
    };
    toc: {
        light: ToCTheme;
        dark: ToCTheme;
    };
}
export declare const DefaultCodeTheme: CodeTheme;
export declare const DefaultCodeThemeLight: CodeTheme;
export declare const DefaultTheme: CodedocTheme;
export interface ThemeExtension {
    light?: Partial<ContentTheme>;
    dark?: Partial<ContentTheme>;
    code?: {
        wmbar?: boolean;
        light?: Partial<CodeTheme>;
        dark?: Partial<CodeTheme>;
    };
    quote?: {
        light?: Partial<QuoteTheme>;
        dark?: Partial<QuoteTheme>;
    };
    toc?: {
        light?: Partial<ToCTheme>;
        dark?: Partial<ToCTheme>;
    };
}
export declare function createTheme(extension: ThemeExtension): CodedocTheme;
